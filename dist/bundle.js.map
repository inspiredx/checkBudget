{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,wBAAwB;;;;;;UChC1B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN2B;AAC3B;AACA;AACA;AACA,mBAAmB;AACnB,iDAAiD;AACjD;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,UAAU;AACV,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,qEAAqE;AACvE;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA,0BAA0B;AAC1B,mCAAmC;AACnC;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,gBAAgB,kB","sources":["webpack://test-udemy/./test.js","webpack://test-udemy/webpack/bootstrap","webpack://test-udemy/webpack/runtime/compat get default export","webpack://test-udemy/webpack/runtime/define property getters","webpack://test-udemy/webpack/runtime/hasOwnProperty shorthand","webpack://test-udemy/webpack/runtime/make namespace object","webpack://test-udemy/./script.js"],"sourcesContent":["let num = 50;\r\n\r\nwhile (num < 55) {\r\n    console.log(num);\r\n    num++;\r\n}\r\n\r\n\r\nfor (num; num < 60; num++) {\r\n    if (num == 55) {\r\n        break;\r\n    }\r\n    console.log(num);\r\n}\r\n\r\ndo {\r\n    console.log(num);\r\n    num++;\r\n\r\n} while (num < 55);\r\n\r\n\r\n\r\n// Аналог цикла for из 3 задания\r\n\r\nlet i = 0;\r\n\r\ndo {\r\n    let a = prompt(\"Введите обязательную статью расходов в этом месяце\", '');\r\n    let b = prompt(\"Во сколько обойдется?\", '');\r\n    i++;\r\n\r\n} while (i > 0 && i < 2); //цикл выполняется пока i не перестанет быть меньше 2","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {num} from './test';\r\n\r\nlet money, time;\r\n\r\nfunction start() { //Объявляем функцию\r\n    money = +prompt('Ваш бюджет на месяц?', ''); //Благодаря унарному плюсу здесь передается число.\r\n    time = prompt('Введите дату в формате YYYY-MM-DD', '');\r\n\r\n    while (isNaN(money) || money == \"\" || money == null) { //Если один из вариантов выполнится, то цикл будет продолжаться\r\n        money = +prompt('Ваш бюджет на месяц?', '');\r\n    }\r\n\r\n}\r\n\r\nstart(); //Вызываем функцию\r\n\r\nlet appData = {\r\n    budget: money,\r\n    timeData: time,\r\n    expenses: {}, //Это объект. Чтобы создать новое свойство или метод у объекта 2 способа: через точку или [].\r\n    optionalExpenses: {},\r\n    income: [],\r\n    savings: true\r\n};\r\n\r\n\r\nfunction chooseExpenses() { //Объявляем функцию\r\n    //Записываем цикл, который задаст вопросы 2 раза\r\n\r\n    for (let i = 0; i < 2; /*пока не закончатся вопросы, всего два комплекса вопросов*/ i++) {\r\n        /*Записываем действия, которые должны произойти*/\r\n        let a = prompt(\"Введите обязательную статью расходов в этом месяце\", '');\r\n        let b = prompt(\"Во сколько обойдется?\", '');\r\n\r\n\r\n        //Пишем условие для цикла\r\n        if ((typeof (a)) === 'string' && (typeof (a)) != null && (typeof (b)) != null &&\r\n            a != '' && b != '' && a.length < 20) { //Проверяем что тип данных - строка. Для prompt не имеет смысла./ Проверяем что НЕ равно null. И то же для b. Не может быть пустой строкой\r\n            console.log('done');\r\n            appData.expenses[a] = b;\r\n            /*При использовании квадратных скобок, свойство может содержать любую строку. \r\n               При ответе на вопрос a - ответ будет записан как свойство объекта appData.expenses. Получается пара (ключ-значение) При вводе данные записываются*/\r\n        } else {\r\n            i = i - 1; //Возвращение на цикл обратно , отмнимаем от i единицу.\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nchooseExpenses(); //Вызываем функцию\r\n\r\n\r\nappData.moneyPerDay = (appData.budget / 30).toFixed();\r\n\r\nalert('Ежедневный бюджет:' + appData.moneyPerDay);\r\n\r\n//Цикл проверки уровня бюджета\r\nif (appData.moneyPerDay < 1000) {\r\n    console.log(\"Минимальный уровень достатка\");\r\n} else if (appData.moneyPerDay > 1000 && appData.moneyPerDay < 5000) { //В противном случае\r\n    console.log(\"Средний уровень достатка\");\r\n} else if (appData.moneyPerDay > 5000) {\r\n    console.log(\"Высокий уровень достатка\");\r\n} else {\r\n    console.log(\"Произошла ошибка\");\r\n}\r\n\r\nfunction checkSavings() { //Объявляем функцию (Рассчет накоплений с депозита, если он есть)\r\n    if (appData.savings == true) { //Действительно ли ровняется true(чтобы функция работала, в объекте appData savings задать значение true)\r\n        let save = +prompt(\"Какова сумма накоплений?\"),\r\n            percent = +prompt(\"Под какой процент?\");\r\n\r\n        appData.monthIncome = save / 100 / 12 * percent; //Вычисляем доход в месяц\r\n        alert(\"Доход в месяц с вашего депозита:  \" + appData.monthIncome);\r\n    }\r\n}\r\n\r\ncheckSavings(); //Вызываем функцию"],"names":[],"sourceRoot":""}